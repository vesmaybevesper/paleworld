plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url = 'https://maven.minecraftforge.net/' }
	maven { url = 'https://maven.wispforest.io/releases/' }
	maven { url = "https://api.modrinth.com/maven" }
	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = 'GeckoLib'
		url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
		content {
			includeGroup("software.bernie.geckolib")
		}
	}

		maven {
			name = 'BlameJared Maven (CrT / Bookshelf)'
			url = 'https://maven.blamejared.com'
		}
		maven { url = 'https://jitpack.io' }

	maven {
		name = "SmartBrainLib (SBL) Maven Repo"
		url = "https://dl.cloudsmith.io/public/tslat/sbl/maven/"
	}
	}


	fabricApi {
		configureDataGeneration {
			client = true
		}
	}


	dependencies {
		// To change the versions see the gradle.properties file
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
		modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
		//modImplementation "net.tslat.smartbrainlib:SmartBrainLib-fabric-${project.minecraft_version}:${project.sbl_version}"
		modImplementation include("com.github.glitchfiend:TerraBlender-fabric:${project.terrablender_version}")
		modImplementation include("maven.modrinth:midnightlib:${project.midnightlib_version}")
		modCompileOnly("com.terraformersmc:modmenu:${project.modmenu_version}")
		modCompileOnly "maven.modrinth:iris:${project.iris_version}"
		//modImplementation include("org.anonvoto:glsl-transformer:1.0.0")


		/*modImplementation include("foundry.veil:veil-fabric-1.21.1:${project.veil_version}") {
		exclude group: "maven.modrinth"
	}
	modImplementation 'com.github.Ocelot5836:glsl-processor:8f99a0213d'
*/

	}

	processResources {
		inputs.property "version", project.version

		filesMatching("fabric.mod.json") {
			expand "version": project.version
		}
	}

	tasks.withType(JavaCompile).configureEach {
		it.options.release = 21
	}

	java {
		// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
		// if it is present.
		// If you remove this line, sources will not be generated.
		withSourcesJar()

		sourceCompatibility = JavaVersion.VERSION_21
		targetCompatibility = JavaVersion.VERSION_21
	}

	jar {
		from("LICENSE") {
			rename { "${it}_${project.base.archivesName.get()}" }
		}
	}

// configure the maven publication
	publishing {
		publications {
			create("mavenJava", MavenPublication) {
				artifactId = project.archives_base_name
				from components.java
			}
		}

		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
		repositories {
			// Add repositories to publish to here.
			// Notice: This block does NOT have the same function as the block in the top level.
			// The repositories here will be used for publishing your artifact, not for
			// retrieving dependencies.
		}
	}
	/*tasks.withType(ProcessResources) {
		duplicatesStrategy = DuplicatesStrategy.WARN
	}*/

